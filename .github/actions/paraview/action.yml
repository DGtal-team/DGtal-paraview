name: "Build Paraview"
description: "Build paraview"
outputs:
  build-dir: 
    description: "Path of Paraview build directory"
    value: ${{ runner.workspace }}/paraview/build

runs:
  using: "composite"
  steps:
    - name: "Paraview dependencies Linux"
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        sudo apt-get install git cmake build-essential libgl1-mesa-dev libxt-dev libqt5x11extras5-dev libqt5help5 qttools5-dev qtxmlpatterns5-dev-tools libqt5svg5-dev python3-dev python3-numpy libopenmpi-dev libtbb-dev ninja-build qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools

    - name: "Paraview dependencies macOS"
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        brew install open-mpi cmake mesa tbb ninja gdal qt5

    - name: "Build cache"
      id: build-cache
      uses: actions/cache@v4
      with:
        path: ${{ runner.workspace}}/paraview
        key: ${{ runner.os }}-paraviewbuild

    - name: "Clone"
      if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
      shell: bash
      working-directory: ${{ runner.workspace }}
      run: |
        git clone --recursive https://gitlab.kitware.com/paraview/paraview.git

# Only valid for macOS
        export LDFLAGS="-L/opt/homebrew/opt/qt@5/lib"
        export CPPFLAGS="-I/opt/homebrew/opt/qt@5/include"

# Necessary for statics libs
        cmake -E make_directory ${{ runner.workspace }}/paraview/build -DCMAKE_POSITION_INDEPENDENT_CODE=ON

    - name: Testing 
      shell: bash
      run: |
        echo "Cache: "
        echo ${{ steps.build-cache.outputs.cache-hit }}
        ldd ${{ runner.workspace }}/DGtal/build/src/DGtal/libDGtal.so


    - name: "Build"
      if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
      id: build
      shell: bash
      working-directory: ${{ runner.workspace }}/paraview/build
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --parallel $(nproc)


